[{"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/index.js":"1","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/App.js":"2","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/lib/commerce.js":"3","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/index.js":"4","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Navbar/Navbar.jsx":"5","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/Checkout/Checkout.jsx":"6","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/Products.jsx":"7","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/Cart.jsx":"8","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Navbar/styles.js":"9","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/styles.js":"10","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/styles.js":"11","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/Checkout/styles.js":"12","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/PaymentForm.jsx":"13","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/CartItem/CartItem.jsx":"14","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/AddressForm.jsx":"15","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/Product/Product.jsx":"16","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/Product/styles.js":"17","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/CartItem/styles.js":"18","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/FormInput.jsx":"19","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/Review.jsx":"20"},{"size":149,"mtime":1607763406891,"results":"21","hashOfConfig":"22"},{"size":4082,"mtime":1608630702364,"results":"23","hashOfConfig":"22"},{"size":127,"mtime":1607848912479,"results":"24","hashOfConfig":"22"},{"size":227,"mtime":1608107864663,"results":"25","hashOfConfig":"22"},{"size":1499,"mtime":1608023171300,"results":"26","hashOfConfig":"22"},{"size":3954,"mtime":1608642366373,"results":"27","hashOfConfig":"22"},{"size":740,"mtime":1607933801411,"results":"28","hashOfConfig":"22"},{"size":2088,"mtime":1608105175993,"results":"29","hashOfConfig":"22"},{"size":1631,"mtime":1607770732801,"results":"30","hashOfConfig":"22"},{"size":671,"mtime":1607962792570,"results":"31","hashOfConfig":"22"},{"size":298,"mtime":1607772706472,"results":"32","hashOfConfig":"22"},{"size":1350,"mtime":1608107650025,"results":"33","hashOfConfig":"22"},{"size":6479,"mtime":1608642366416,"results":"34","hashOfConfig":"22"},{"size":1346,"mtime":1608030596645,"results":"35","hashOfConfig":"22"},{"size":5561,"mtime":1608324160096,"results":"36","hashOfConfig":"22"},{"size":1371,"mtime":1607933890868,"results":"37","hashOfConfig":"22"},{"size":406,"mtime":1607767733992,"results":"38","hashOfConfig":"22"},{"size":389,"mtime":1607966271672,"results":"39","hashOfConfig":"22"},{"size":582,"mtime":1608281316393,"results":"40","hashOfConfig":"22"},{"size":1549,"mtime":1608642366487,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"k6o521",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/index.js",[],["86","87"],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/App.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/lib/commerce.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/index.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Navbar/Navbar.jsx",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/Checkout/Checkout.jsx",["88"],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/Products.jsx",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/Cart.jsx",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Navbar/styles.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/styles.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/styles.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/Checkout/styles.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/PaymentForm.jsx",["89"],"import React from 'react';\r\nimport { Typography, Button, Divider } from '@material-ui/core';\r\nimport { Elements, CardElement, ElementsConsumer } from '@stripe/react-stripe-js';\r\n// import { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport Review from './Review';\r\n\r\nconst stripePromise = loadStripe(process.env.REACT_APP_STRIPE_PUBLIC_KEY);\r\n\r\n// function PaymentForm({shippingData, checkoutToken, nextStep, backStep, onCaptureCheckout }) {        \r\n//     const Payment = () => {\r\n//         const stripe = useStripe();\r\n//         const elements = useElements();\r\n\r\n//         const handleSubmit = async (event, elements, stripe) => {\r\n//             event.preventDefault();\r\n    \r\n//             if (!elements || !stripe) return;\r\n    \r\n//             const cardElement = elements.getElement(CardElement);\r\n    \r\n//             try {\r\n//                 const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\r\n//                 if (error) throw error;            \r\n    \r\n//                 const orderData = {\r\n//                     line_items: checkoutToken.live.line_items,\r\n//                     customer: {\r\n//                         firstname: shippingData.firstName,\r\n//                         lastname: shippingData.lastName,\r\n//                         email: shippingData.email\r\n//                     },\r\n//                     shipping: {\r\n//                         name: 'Primary',\r\n//                         street: shippingData.address1,\r\n//                         town_city: shippingData.city,\r\n//                         county_state: shippingData.shippingSubdivision,\r\n//                         postal_zip_code: shippingData.zip,\r\n//                         country: shippingData.shippingCountry\r\n//                     },\r\n//                     fulfillment: {\r\n//                         shipping_method: shippingData.shippingOption\r\n//                     },\r\n//                     payment: {\r\n//                         gateway: 'stripe',\r\n//                         stripe: {\r\n//                             payment_method_id: paymentMethod.id\r\n//                         }\r\n//                     }\r\n//                 }            \r\n//                 console.log(orderData)\r\n//                 onCaptureCheckout(checkoutToken.id, orderData);\r\n//                 nextStep();\r\n    \r\n//             } catch (error) {\r\n//                 console.log(error);\r\n//             }\r\n    \r\n//         }\r\n\r\n//         return (\r\n//             <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n//                 <CardElement />\r\n//                 <br /> <br />\r\n//                 <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n//                     <Button variant='outlined' onClick={backStep}>Back</Button>\r\n//                     <Button type='submit' variant='contained' disabled={!stripe} color='primary'>\r\n//                         Pay {checkoutToken.live.subtotal.formatted_with_symbol}\r\n//                     </Button>\r\n//                 </div>\r\n//             </form> \r\n//         )\r\n//     }\r\n    \r\n//     return (\r\n//         <>\r\n//             <Review checkoutToken={checkoutToken} />\r\n//             <Divider />\r\n//             <Typography variant='h6' style={{margin: '20px 0'}} gutterBottom>Payment method</Typography>\r\n//             <Elements stripe={stripePromise}>\r\n//                 <Payment />\r\n//             </Elements>\r\n//         </>\r\n//     )\r\n// }\r\n\r\nfunction PaymentForm({shippingData, checkoutToken, nextStep, backStep, onCaptureCheckout }) {        \r\n\r\n    const handleSubmit = async (event, elements, stripe) => {\r\n        event.preventDefault();\r\n\r\n        if (!elements || !stripe) return;\r\n\r\n        const cardElement = elements.getElement(CardElement);\r\n\r\n        try {\r\n            const { error, paymentMethod } = await stripe.createPaymentMethod({ type: 'card', card: cardElement });\r\n            if (error) throw error;            \r\n\r\n            const orderData = {\r\n                line_items: checkoutToken.live.line_items,\r\n                customer: {\r\n                    firstname: shippingData.firstName,\r\n                    lastname: shippingData.lastName,\r\n                    email: shippingData.email\r\n                },\r\n                shipping: {\r\n                    name: 'Primary',\r\n                    street: shippingData.address1,\r\n                    town_city: shippingData.city,\r\n                    county_state: shippingData.shippingSubdivision,\r\n                    postal_zip_code: shippingData.zip,\r\n                    country: shippingData.shippingCountry\r\n                },\r\n                fulfillment: {\r\n                    shipping_method: shippingData.shippingOption\r\n                },\r\n                payment: {\r\n                    gateway: 'stripe',\r\n                    stripe: {\r\n                        payment_method_id: paymentMethod.id\r\n                    }\r\n                }\r\n            }            \r\n            console.log(orderData)\r\n            onCaptureCheckout(checkoutToken.id, orderData);\r\n            nextStep();\r\n\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n\r\n    }            \r\n    \r\n    return (\r\n        <>\r\n            <Review checkoutToken={checkoutToken} />\r\n            <Divider />\r\n            <Typography variant='h6' style={{margin: '20px 0'}} gutterBottom>Payment method</Typography>\r\n            <Elements stripe={stripePromise}>\r\n                <ElementsConsumer>\r\n                    {({ stripe, elements }) => (\r\n                        <form onSubmit={(e) => handleSubmit(e, elements, stripe)}>\r\n                            <CardElement />\r\n                            <br /> <br />\r\n                            <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                                <Button variant='outlined' onClick={backStep}>Back</Button>\r\n                                <Button type='submit' variant='contained' disabled={!stripe} color='primary'>\r\n                                    Pay {checkoutToken.live.subtotal.formatted_with_symbol}\r\n                                </Button>\r\n                            </div>\r\n                        </form>\r\n                    )}    \r\n                </ElementsConsumer> \r\n            </Elements>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default PaymentForm;","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/CartItem/CartItem.jsx",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/AddressForm.jsx",["90","91"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './FormInput';\r\n\r\nfunction AddressForm({ checkoutToken, next }) {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n    const methods = useForm();\r\n    \r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        try {\r\n            const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n            setShippingCountries(countries);\r\n            setShippingCountry(Object.keys(countries)[0]);\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        try {\r\n            const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n            setShippingSubdivisions(subdivisions);\r\n            setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n        } catch(error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        try {\r\n            const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country , region });            \r\n            setShippingOptions(options);\r\n            setShippingOption(options[0].id);\r\n        } catch(error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id);        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision]);\r\n\r\n    return (\r\n        <>            \r\n            <Typography variant='h6' gutterBottom>Shipping Address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name='firstName' label='First name' />\r\n                        <FormInput name='lastName' label='Last name' />\r\n                        <FormInput name='address1' label='Address' />\r\n                        <FormInput name='email' label='Email' />\r\n                        <FormInput name='city' label='City' />\r\n                        <FormInput name='zip' label='ZIP/Postal code' />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Countries</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {Object.entries(shippingCountries).map(([code, name]) => (\r\n                                    <MenuItem key={code} value={code}>\r\n                                        {name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>                             \r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {Object.entries(shippingSubdivisions).map(([code, name]) => (\r\n                                    <MenuItem key={code} value={code}>\r\n                                        {name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid> \r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                {shippingOptions.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.description} - {option.price.formatted_with_symbol}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid> \r\n                    </Grid>   \r\n                    <br />\r\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                        <Button component={Link} to='/cart' variant='outlined'>Back to cart</Button>\r\n                        <Button type='submit' variant='contained' color='primary'>Next</Button>\r\n                    </div>                 \r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AddressForm;","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/Product/Product.jsx",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/Product/styles.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/CartItem/styles.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/FormInput.jsx",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/Review.jsx",["92","93","94"],"import React from 'react';\r\nimport { Typography, List, ListItem, ListItemText } from '@material-ui/core';\r\n\r\nfunction Review({ checkoutToken }) {\r\n    console.log(checkoutToken.live)\r\n    const paddingStyle = {\r\n        padding: '10px 0'\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography variant='h6' gutterBottom>Order summary</Typography>\r\n            <List disablePadding>\r\n                {checkoutToken.live.line_items.map((item) => (\r\n                    <ListItem style={paddingStyle} key={item.name}>\r\n                        <ListItemText primary={item.name} secondary={`Quantity: ${item.quantity}`} />\r\n                        <Typography variant='body2'>{item.line_total.formatted_with_symbol}</Typography>\r\n                    </ListItem>\r\n                ))}\r\n                <ListItem style={paddingStyle}>\r\n                        <ListItemText primary={`Shipping option:`} secondary={`${checkoutToken.live.shipping.available_options[0].description}`} />\r\n                        <Typography variant='body2'>{checkoutToken.live.shipping.available_options[0].price.formatted_with_symbol}</Typography>\r\n                </ListItem>\r\n                <ListItem style={paddingStyle}>\r\n                    <ListItemText primary='Total' />\r\n                    <Typography variant='subtitle1' style={{fontWeight: 700}}>\r\n                        {checkoutToken.live.subtotal.formatted_with_symbol}\r\n                    </Typography>\r\n                </ListItem>\r\n            </List>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Review;\r\n",{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"99","severity":1,"message":"100","line":73,"column":8,"nodeType":"101","endLine":73,"endColumn":10,"suggestions":"102"},{"ruleId":"99","severity":1,"message":"103","line":91,"column":8,"nodeType":"101","endLine":91,"endColumn":10,"suggestions":"104"},{"ruleId":"99","severity":1,"message":"105","line":49,"column":8,"nodeType":"101","endLine":49,"endColumn":10,"suggestions":"106"},{"ruleId":"99","severity":1,"message":"107","line":57,"column":8,"nodeType":"101","endLine":57,"endColumn":29,"suggestions":"108"},{"ruleId":"109","severity":1,"message":"110","line":1,"column":17,"nodeType":"111","messageId":"112","endLine":1,"endColumn":25},{"ruleId":"109","severity":1,"message":"113","line":1,"column":27,"nodeType":"111","messageId":"112","endLine":1,"endColumn":36},{"ruleId":"109","severity":1,"message":"114","line":5,"column":5,"nodeType":"111","messageId":"112","endLine":5,"endColumn":9},"no-native-reassign",["115"],"no-negated-in-lhs",["116"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cart.id' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["117"],"React Hook useEffect has missing dependencies: 'checkoutToken.id', 'shippingData.shippingCountry', 'shippingData.shippingOption', and 'shippingData.shippingSubdivision'. Either include them or remove the dependency array.",["118"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["119"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["120"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},"Update the dependencies array to be: [cart.id, history]",{"range":"129","text":"130"},"Update the dependencies array to be: [checkoutToken.id, shippingData.shippingCountry, shippingData.shippingOption, shippingData.shippingSubdivision]",{"range":"131","text":"132"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"133","text":"134"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"135","text":"136"},[3131,3133],"[cart.id, history]",[3709,3711],"[checkoutToken.id, shippingData.shippingCountry, shippingData.shippingOption, shippingData.shippingSubdivision]",[2056,2058],"[checkoutToken.id]",[2325,2346],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]