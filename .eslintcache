[{"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/index.js":"1","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/App.js":"2","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/lib/commerce.js":"3","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/index.js":"4","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Navbar/Navbar.jsx":"5","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/Checkout/Checkout.jsx":"6","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/Products.jsx":"7","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/Cart.jsx":"8","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Navbar/styles.js":"9","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/styles.js":"10","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/styles.js":"11","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/Checkout/styles.js":"12","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/PaymentForm.jsx":"13","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/CartItem/CartItem.jsx":"14","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/AddressForm.jsx":"15","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/Product/Product.jsx":"16","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/Product/styles.js":"17","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/CartItem/styles.js":"18","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/FormInput.jsx":"19","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/Review.jsx":"20"},{"size":149,"mtime":1607763406891,"results":"21","hashOfConfig":"22"},{"size":4082,"mtime":1608653459162,"results":"23","hashOfConfig":"22"},{"size":127,"mtime":1607848912479,"results":"24","hashOfConfig":"22"},{"size":227,"mtime":1608107864663,"results":"25","hashOfConfig":"22"},{"size":1499,"mtime":1608023171300,"results":"26","hashOfConfig":"22"},{"size":4006,"mtime":1608642410132,"results":"27","hashOfConfig":"22"},{"size":740,"mtime":1607933801411,"results":"28","hashOfConfig":"22"},{"size":2123,"mtime":1608649781598,"results":"29","hashOfConfig":"22"},{"size":1631,"mtime":1607770732801,"results":"30","hashOfConfig":"22"},{"size":856,"mtime":1608649948513,"results":"31","hashOfConfig":"22"},{"size":298,"mtime":1607772706472,"results":"32","hashOfConfig":"22"},{"size":1350,"mtime":1608107650025,"results":"33","hashOfConfig":"22"},{"size":4744,"mtime":1608654643454,"results":"34","hashOfConfig":"22"},{"size":1376,"mtime":1608649039520,"results":"35","hashOfConfig":"22"},{"size":5561,"mtime":1608324160096,"results":"36","hashOfConfig":"22"},{"size":1404,"mtime":1608648595150,"results":"37","hashOfConfig":"22"},{"size":786,"mtime":1608648543844,"results":"38","hashOfConfig":"22"},{"size":689,"mtime":1608649720462,"results":"39","hashOfConfig":"22"},{"size":582,"mtime":1608281316393,"results":"40","hashOfConfig":"22"},{"size":1532,"mtime":1608642565123,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"k6o521",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"44"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":1,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/index.js",[],["85","86"],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/App.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/lib/commerce.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/index.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Navbar/Navbar.jsx",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/Checkout/Checkout.jsx",["87"],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { Paper, Stepper, Step, StepLabel, Typography, CircularProgress, Divider, Button, CssBaseline } from '@material-ui/core';\r\nimport useStyles from './styles';\r\nimport { commerce } from '../../../lib/commerce';\r\nimport AddressForm from '../AddressForm';\r\nimport PaymentForm from '../PaymentForm';\r\n\r\nfunction Checkout({ cart, order, onCaptureCheckout, error, onResetError }) {\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [checkoutToken, setCheckoutToken] = useState(null);\r\n    const [shippingData, setShippingData] = useState({});\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n\r\n    const steps = ['Shipping Address', 'Payment Details'];\r\n\r\n    let Confirmation = () => order.customer ? (\r\n        <>\r\n            <Typography variant='h5'>Thank you for your purchase, {order.customer.firstname} {order.customer.lastname}</Typography>\r\n            <Divider className={classes.divider} />\r\n            <Typography variant='subtitle2'>Order ref: {order.customer_reference}</Typography>\r\n            <br />\r\n            <Button component={Link} to='/' variant='outlined' type='button' onClick={onResetError}>Back to home</Button>\r\n        </>\r\n    ) : (\r\n        <div className={classes.spinner}>\r\n            <CircularProgress />\r\n        </div>\r\n    );\r\n\r\n    if (error) {\r\n        Confirmation = () => (\r\n            <>\r\n                <Typography variant='h5'>Error {error}</Typography>\r\n                <br />\r\n                <Button component={Link} to='/' variant='outlined' type='button' onClick={onResetError}>Back to home</Button>\r\n            </>\r\n        ); \r\n    }     \r\n\r\n    const nextStep = () => setActiveStep((prevStep) => prevStep + 1);\r\n    const backStep = () => setActiveStep((prevStep) => prevStep - 1);\r\n\r\n    const next = (data) => {\r\n        setShippingData(data);\r\n        nextStep();\r\n    }    \r\n\r\n    const Form = () => (activeStep === 0) ? <AddressForm                                                 \r\n                                                checkoutToken={checkoutToken}\r\n                                                next={next} \r\n                                            /> : <PaymentForm \r\n                                                     shippingData={shippingData} \r\n                                                     checkoutToken={checkoutToken}\r\n                                                     nextStep={nextStep} \r\n                                                     backStep={backStep} \r\n                                                     onCaptureCheckout={onCaptureCheckout} \r\n                                                 />;\r\n\r\n    useEffect(() => {\r\n        const generateToken = async () => {\r\n            try {                \r\n                const token = await commerce.checkout.generateToken(cart.id, { type: 'cart' });                \r\n                setCheckoutToken(token);\r\n            } catch(error) {\r\n                history.push('/');                \r\n            }\r\n        }\r\n\r\n        generateToken();\r\n    // }, [cart.id]);\r\n    }, []);\r\n\r\n    return (        \r\n        <>\r\n            <CssBaseline />\r\n            <div className={classes.toolbar} />\r\n            <main className={classes.layout}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography variant='h4' align='center'>Checkout</Typography>\r\n                    <Stepper activeStep={activeStep} className={classes.stepper}>\r\n                        {steps.map((step) => (\r\n                            <Step>\r\n                                <StepLabel>{step}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    {activeStep === steps.length ? <Confirmation /> : checkoutToken && <Form />}\r\n                </Paper>\r\n            </main>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Checkout;","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/Products.jsx",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/Cart.jsx",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Navbar/styles.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/styles.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/styles.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/Checkout/styles.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/PaymentForm.jsx",["88","89","90"],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/CartItem/CartItem.jsx",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/AddressForm.jsx",["91","92"],"import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\r\nimport { useForm, FormProvider } from 'react-hook-form';\r\nimport { commerce } from '../../lib/commerce';\r\nimport FormInput from './FormInput';\r\n\r\nfunction AddressForm({ checkoutToken, next }) {\r\n    const [shippingCountries, setShippingCountries] = useState([]);\r\n    const [shippingCountry, setShippingCountry] = useState('');\r\n    const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\r\n    const [shippingSubdivision, setShippingSubdivision] = useState('');\r\n    const [shippingOptions, setShippingOptions] = useState([]);\r\n    const [shippingOption, setShippingOption] = useState('');\r\n    const methods = useForm();\r\n    \r\n    const fetchShippingCountries = async (checkoutTokenId) => {\r\n        try {\r\n            const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\r\n            setShippingCountries(countries);\r\n            setShippingCountry(Object.keys(countries)[0]);\r\n        } catch(error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    const fetchSubdivisions = async (countryCode) => {\r\n        try {\r\n            const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\r\n            setShippingSubdivisions(subdivisions);\r\n            setShippingSubdivision(Object.keys(subdivisions)[0]);\r\n        } catch(error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    const fetchShippingOptions = async (checkoutTokenId, country, region = null) => {\r\n        try {\r\n            const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country , region });            \r\n            setShippingOptions(options);\r\n            setShippingOption(options[0].id);\r\n        } catch(error) {\r\n            console.error(error);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchShippingCountries(checkoutToken.id);        \r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (shippingCountry) fetchSubdivisions(shippingCountry);\r\n    }, [shippingCountry]);\r\n\r\n    useEffect(() => {\r\n        if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\r\n    }, [shippingSubdivision]);\r\n\r\n    return (\r\n        <>            \r\n            <Typography variant='h6' gutterBottom>Shipping Address</Typography>\r\n            <FormProvider {...methods}>\r\n                <form onSubmit={methods.handleSubmit((data) => next({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\r\n                    <Grid container spacing={3}>\r\n                        <FormInput name='firstName' label='First name' />\r\n                        <FormInput name='lastName' label='Last name' />\r\n                        <FormInput name='address1' label='Address' />\r\n                        <FormInput name='email' label='Email' />\r\n                        <FormInput name='city' label='City' />\r\n                        <FormInput name='zip' label='ZIP/Postal code' />\r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Countries</InputLabel>\r\n                            <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\r\n                                {Object.entries(shippingCountries).map(([code, name]) => (\r\n                                    <MenuItem key={code} value={code}>\r\n                                        {name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid>                             \r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Subdivision</InputLabel>\r\n                            <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\r\n                                {Object.entries(shippingSubdivisions).map(([code, name]) => (\r\n                                    <MenuItem key={code} value={code}>\r\n                                        {name}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid> \r\n                        <Grid item xs={12} sm={6}>\r\n                            <InputLabel>Shipping Options</InputLabel>\r\n                            <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\r\n                                {shippingOptions.map((option) => (\r\n                                    <MenuItem key={option.id} value={option.id}>\r\n                                        {option.description} - {option.price.formatted_with_symbol}\r\n                                    </MenuItem>\r\n                                ))}\r\n                            </Select>\r\n                        </Grid> \r\n                    </Grid>   \r\n                    <br />\r\n                    <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                        <Button component={Link} to='/cart' variant='outlined'>Back to cart</Button>\r\n                        <Button type='submit' variant='contained' color='primary'>Next</Button>\r\n                    </div>                 \r\n                </form>\r\n            </FormProvider>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default AddressForm;","/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/Product/Product.jsx",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Products/Product/styles.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/Cart/CartItem/styles.js",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/FormInput.jsx",[],"/mnt/c/Users/pc/Desktop/My projects/e-commerce/src/components/CheckoutForm/Review.jsx",[],{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","severity":1,"message":"98","line":73,"column":8,"nodeType":"99","endLine":73,"endColumn":10,"suggestions":"100"},{"ruleId":"101","severity":1,"message":"102","line":78,"column":19,"nodeType":"103","messageId":"104","endLine":78,"endColumn":30},{"ruleId":"105","severity":2,"message":"106","line":78,"column":83,"nodeType":"103","messageId":"107","endLine":78,"endColumn":92},{"ruleId":"97","severity":1,"message":"108","line":111,"column":8,"nodeType":"99","endLine":111,"endColumn":10,"suggestions":"109"},{"ruleId":"97","severity":1,"message":"110","line":49,"column":8,"nodeType":"99","endLine":49,"endColumn":10,"suggestions":"111"},{"ruleId":"97","severity":1,"message":"112","line":57,"column":8,"nodeType":"99","endLine":57,"endColumn":29,"suggestions":"113"},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'cart.id' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["116"],"no-unused-vars","'payplayAuth' is assigned a value but never used.","Identifier","unusedVar","no-undef","'orderData' is not defined.","undef","React Hook useEffect has missing dependencies: 'checkoutToken.id', 'shippingData.shippingCountry', 'shippingData.shippingOption', and 'shippingData.shippingSubdivision'. Either include them or remove the dependency array.",["117"],"React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.",["118"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["119"],"no-global-assign","no-unsafe-negation",{"desc":"120","fix":"121"},{"desc":"122","fix":"123"},{"desc":"124","fix":"125"},{"desc":"126","fix":"127"},"Update the dependencies array to be: [cart.id, history]",{"range":"128","text":"129"},"Update the dependencies array to be: [checkoutToken.id, shippingData.shippingCountry, shippingData.shippingOption, shippingData.shippingSubdivision]",{"range":"130","text":"131"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"132","text":"133"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"134","text":"135"},[3183,3185],"[cart.id, history]",[4229,4231],"[checkoutToken.id, shippingData.shippingCountry, shippingData.shippingOption, shippingData.shippingSubdivision]",[2056,2058],"[checkoutToken.id]",[2325,2346],"[checkoutToken.id, shippingCountry, shippingSubdivision]"]